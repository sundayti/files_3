// <auto-generated />
using System;
using FileAnalysisService.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FileAnalysisService.Infrastructure.Migrations
{
    [DbContext(typeof(FileAnalyticsDbContext))]
    partial class FileAnalyticsDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FileAnalysisService.Domain.Entities.FileAnalysisRecord", b =>
                {
                    b.Property<Guid>("FileId")
                        .HasColumnType("uuid")
                        .HasColumnName("file_id");

                    b.Property<int>("CharacterCount")
                        .HasColumnType("integer")
                        .HasColumnName("character_count");

                    b.Property<string>("CloudImageLocation")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("character varying(1024)")
                        .HasColumnName("image_location");

                    b.Property<DateTime>("CreatedAtUtc")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at_utc");

                    b.Property<int>("ParagraphCount")
                        .HasColumnType("integer")
                        .HasColumnName("paragraph_count");

                    b.Property<int>("WordCount")
                        .HasColumnType("integer")
                        .HasColumnName("word_count");

                    b.HasKey("FileId");

                    b.ToTable("file_analyses", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
